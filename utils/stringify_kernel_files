#! /usr/bin/env python
#------------------------------------------------------------------------------#
# Copyright (c) 2012 Los Alamos National Security, LLC
# All rights reserved.
#------------------------------------------------------------------------------#

import subprocess
import re
import os.path
import sys

#------------------------------------------------------------------------------#
# usage
#------------------------------------------------------------------------------#

if len(sys.argv) != 3:
	print 'Usage: ' + sys.argv[0] + ' <search directory> <output file>'
	sys.exit(1)

#------------------------------------------------------------------------------#
# find kernel files (.cl)
#------------------------------------------------------------------------------#

sp0 = subprocess.Popen(["find " + sys.argv[1] + " -regex '.*\.cl'"],
	stdout=subprocess.PIPE, shell=True)

output = open(sys.argv[2], 'w')
output.write('#ifndef kernel_strings_h\n')
output.write('#define kernel_strings_h\n\n')


#------------------------------------------------------------------------------#
# process files
#------------------------------------------------------------------------------#

for inputname in sp0.stdout.readlines():

	#---------------------------------------------------------------------------#
	# strip comments from file
	#---------------------------------------------------------------------------#

	sp1 = subprocess.Popen(["cpp -fpreprocessed -dD -E " +
		inputname.rstrip() + " | sed 's,# .*,,g'"],
		stdout=subprocess.PIPE, shell=True)		

	#---------------------------------------------------------------------------#
	# create string name and begin output
	#---------------------------------------------------------------------------#

	charname = re.sub('^\.*\/', '', re.sub('\.cl', '', inputname.rstrip()))

	output.write('const char * ' + charname + ' = \n')

	for line in sp1.stdout.readlines():
		if len(line.rstrip()) == 0:
			continue

		line = re.sub('\"', '\\"', re.sub('\\\\', '\\\\\\\\', line.rstrip()))
		output.write('\"' + line + ' \"\n')

	output.write(';\n\n')

#------------------------------------------------------------------------------#
# close up shop
#------------------------------------------------------------------------------#

output.write('#endif // kernel_strings_h\n')
output.close()
